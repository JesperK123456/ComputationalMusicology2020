scale_fill_magma() +
labs(x = 'Spotify Timbre Coefficients', y = '', fill = 'Cluster') +
facet_wrap(~basis, ncol=4, scales="free_x") +
theme(axis.text.x=element_blank(), axis.ticks.x = element_blank()) +
ggtitle("")
rush.ca %>%
mutate(
timbre =
map(
segments,
compmus_summarise,
timbre,
method = 'mean')) %>%
select(cluster, timbre) %>%
compmus_gather_timbre %>%
filter(basis %in% c("c02", "c03", "c05", "c07")) %>%
ggplot(aes(x = basis, y = value, fill = as.character(cluster))) +
geom_violin() +
scale_fill_viridis_c() +
labs(x = 'Spotify Timbre Coefficients', y = '', fill = 'Cluster') +
facet_wrap(~basis, ncol=4, scales="free_x") +
theme(axis.text.x=element_blank(), axis.ticks.x = element_blank()) +
ggtitle("")
rush.ca %>%
mutate(
timbre =
map(
segments,
compmus_summarise,
timbre,
method = 'mean')) %>%
select(cluster, timbre) %>%
compmus_gather_timbre %>%
filter(basis %in% c("c02", "c03", "c05", "c07")) %>%
ggplot(aes(x = basis, y = value, fill = as.character(cluster))) +
geom_violin() +
scale_fill_viridis_d() +
labs(x = 'Spotify Timbre Coefficients', y = '', fill = 'Cluster') +
facet_wrap(~basis, ncol=4, scales="free_x") +
theme(axis.text.x=element_blank(), axis.ticks.x = element_blank()) +
ggtitle("")
knitr::kable(
rush_albums_clustered %>%
group_by(album_name) %>%
arrange(cluster) %>%
select("Album name" = album_name, "Cluster" = cluster, "Release order" = album_idx)
knitr::kable(
knitr::kable(
rush_albums_clustered %>%
group_by(album_name) %>%
arrange(cluster) %>%
select("Album name" = album_name, "Cluster" = cluster, "Release order" = album_idx)
)
library(tidyverse)
library(spotifyr)
library(compmus)
source('spotify.R')
library(tidyverse)
library(spotifyr)
library(compmus)
#source('spotify.R')
library(tidyverse)
library(spotifyr)
library(compmus)
load("spotify_env.RData")
set_spotify_ID()
pata_pata <-
get_tidy_audio_analysis('3uy90vHHATPjtdilshDQDt') %>%
select(segments) %>% unnest(segments)
pata_pata %>%
mutate(loudness_max_time = start + loudness_max_time) %>%
arrange(loudness_max_time) %>%
mutate(delta_loudness = loudness_max - lag(loudness_max)) %>%
ggplot(aes(x = loudness_max_time, y = pmax(0, delta_loudness))) +
geom_line() +
xlim(0, 30) +
theme_minimal() +
labs(x = 'Time (s)', y = 'Novelty')
pata_pata %>%
mutate(pitches = map(pitches, compmus_normalise, 'clr')) %>%
arrange(start) %>%
mutate(pitches = map2(pitches, lag(pitches), `-`)) %>%
compmus_gather_chroma %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = pitch_class,
fill = pmax(0, value))) +
geom_tile() +
scale_fill_viridis_c(option = 'E', guide = 'none') +
xlim(0, 30) +
labs(x = 'Time (s)', y = NULL, fill = 'Magnitude') +
theme_classic()
pata_pata %>%
arrange(start) %>%
mutate(timbre = map2(timbre, lag(timbre), `-`)) %>%
compmus_gather_timbre %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = pmax(0, value))) +
geom_tile() +
scale_fill_viridis_c(option = 'E', guide = 'none') +
xlim(0, 30) +
labs(x = 'Time (s)', y = NULL, fill = 'Magnitude') +
theme_classic()
graveola <- get_tidy_audio_analysis('6PJasPKAzNLSOzxeAH33j2')
graveola %>%
tempogram(window_size = 8, hop_size = 1, cyclic = FALSE) %>%
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = 'none') +
labs(x = 'Time (s)', y = 'Tempo (BPM)') +
theme_classic()
library(tidyverse)
library(spotifyr)
library(compmus)
load("spotify_env.RData")
set_spotify_ID()
pata_pata <-
get_tidy_audio_analysis('3uy90vHHATPjtdilshDQDt') %>%
select(segments) %>% unnest(segments)
pata_pata %>%
mutate(loudness_max_time = start + loudness_max_time) %>%
arrange(loudness_max_time) %>%
mutate(delta_loudness = loudness_max - lag(loudness_max)) %>%
ggplot(aes(x = loudness_max_time, y = pmax(0, delta_loudness))) +
geom_line() +
xlim(0, 30) +
theme_minimal() +
labs(x = 'Time (s)', y = 'Novelty')
pata_pata %>%
mutate(pitches = map(pitches, compmus_normalise, 'clr')) %>%
arrange(start) %>%
mutate(pitches = map2(pitches, lag(pitches), `-`)) %>%
compmus_gather_chroma %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = pitch_class,
fill = pmax(0, value))) +
geom_tile() +
scale_fill_viridis_c(option = 'E', guide = 'none') +
xlim(0, 30) +
labs(x = 'Time (s)', y = NULL, fill = 'Magnitude') +
theme_classic()
pata_pata %>%
arrange(start) %>%
mutate(timbre = map2(timbre, lag(timbre), `-`)) %>%
compmus_gather_timbre %>%
ggplot(
aes(
x = start + duration / 2,
width = duration,
y = basis,
fill = pmax(0, value))) +
geom_tile() +
scale_fill_viridis_c(option = 'E', guide = 'none') +
xlim(0, 30) +
labs(x = 'Time (s)', y = NULL, fill = 'Magnitude') +
theme_classic()
graveola <- get_tidy_audio_analysis('6PJasPKAzNLSOzxeAH33j2')
graveola %>%
tempogram(window_size = 8, hop_size = 1, cyclic = FALSE) %>%
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = 'none') +
labs(x = 'Time (s)', y = 'Tempo (BPM)') +
theme_classic()
graveola %>%
tempogram(window_size = 8, hop_size = 1, cyclic = TRUE) %>%
ggplot(aes(x = time, y = bpm, fill = power)) +
geom_raster() +
scale_fill_viridis_c(guide = 'none') +
labs(x = 'Time (s)', y = 'Tempo (BPM)') +
theme_classic()
indie <-
pop %>% mutate(playlist = "Indie Pop") %>%
bind_rows(
party %>% mutate(playlist = "Indie Party"),
workout %>% mutate(playlist = "Indie Workout")) %>%
mutate(playlist = factor(playlist)) %>%
mutate(
segments =
map2(segments, key, compmus_c_transpose)) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = 'mean', norm = 'manhattan'),
timbre =
map(
segments,
compmus_summarise, timbre,
method = 'mean')) %>%
mutate(pitches = map(pitches, compmus_normalise, 'clr')) %>%
mutate_at(vars(pitches, timbre), map, bind_rows) %>%
unnest(cols = c(pitches, timbre))
library(tidyverse)
library(spotifyr)
library(compmus)
load("spotify_env.RData")
set_spotify_ID()
pop <-
get_playlist_audio_features('spotify', '37i9dQZF1DWWEcRhUVtL8n') %>%
slice(1:20) %>%
add_audio_analysis
party <-
get_playlist_audio_features('spotify', '37i9dQZF1DWTujiC7wfofZ') %>%
slice(1:20) %>%
add_audio_analysis
workout <-
get_playlist_audio_features('spotify', '37i9dQZF1DXaRL7xbcDl7X') %>%
slice(1:20) %>%
add_audio_analysis
indie <-
pop %>% mutate(playlist = "Indie Pop") %>%
bind_rows(
party %>% mutate(playlist = "Indie Party"),
workout %>% mutate(playlist = "Indie Workout")) %>%
mutate(playlist = factor(playlist)) %>%
mutate(
segments =
map2(segments, key, compmus_c_transpose)) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = 'mean', norm = 'manhattan'),
timbre =
map(
segments,
compmus_summarise, timbre,
method = 'mean')) %>%
mutate(pitches = map(pitches, compmus_normalise, 'clr')) %>%
mutate_at(vars(pitches, timbre), map, bind_rows) %>%
unnest(cols = c(pitches, timbre))
View(indie)
indie_deltas <-
pop %>% mutate(playlist = "Indie Pop") %>%
bind_rows(
party %>% mutate(playlist = "Indie Party"),
workout %>% mutate(playlist = "Indie Workout")) %>%
mutate(playlist = factor(playlist)) %>%
mutate(
segments =
map2(segments, key, compmus_c_transpose)) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map(pitches, compmus_normalise, 'manhattan'))) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map2(pitches, lag(pitches), `-`))) %>%
mutate(
segments =
map(
segments,
mutate,
timbre = map2(timbre, lag(timbre), `-`))) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = 'mean', na.rm = TRUE),
timbre =
map(
segments,
compmus_summarise, timbre,
method = 'mean', na.rm = TRUE)) %>%
mutate_at(vars(pitches, timbre), map, bind_rows) %>%
unnest(cols = c(pitches, timbre))
View(indie_deltas)
?lag
?dplyr::lag
indie_deltas <-
pop %>% mutate(playlist = "Indie Pop") %>%
bind_rows(
party %>% mutate(playlist = "Indie Party"),
workout %>% mutate(playlist = "Indie Workout")) %>%
mutate(playlist = factor(playlist)) %>%
mutate(
segments =
map2(segments, key, compmus_c_transpose)) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map(pitches, compmus_normalise, 'manhattan'))) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map2(pitches, lag(pitches), `-`))) %>%
mutate(
segments =
map(
segments,
mutate,
timbre = map2(timbre, lag(timbre), `-`))) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = 'mean', na.rm = TRUE),
timbre =
map(
segments,
compmus_summarise, timbre,
method = 'mean', na.rm = TRUE)) %>%
mutate_at(vars(pitches, timbre), map, bind_rows) %>%
unnest(cols = c(pitches, timbre))
indie_deltas$segments
?compmus_c_transpose
indie$segments
indie$segments[1,]
indie$segments[1]
View(indie_deltas)
indie_deltas$segments[1]
indie_deltas$segments[1]$pitches
test <- indie_deltas$segments[1]
View(test)
test <- unlist(indie_deltas$segments[1])
test
test <- indie_deltas$segments[1]
tests[[1]]$pitches
test[[1]]$pitches
indie_deltadeltas <- indie_deltas %>%
mutate(
segments =
map2(segments, key, compmus_c_transpose)) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map(pitches, compmus_normalise, 'manhattan'))) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map2(pitches, lag(pitches), `-`))) %>%
mutate(
segments =
map(
segments,
mutate,
timbre = map2(timbre, lag(timbre), `-`))) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = 'mean', na.rm = TRUE),
timbre =
map(
segments,
compmus_summarise, timbre,
method = 'mean', na.rm = TRUE)) %>%
mutate_at(vars(pitches, timbre), map, bind_rows) %>%
unnest(cols = c(pitches, timbre))
indie_deltas$c01
indie_deltas$`C#|Db`
indie_deltadeltas <- pop %>% mutate(playlist = "Indie Pop") %>%
bind_rows(
party %>% mutate(playlist = "Indie Party"),
workout %>% mutate(playlist = "Indie Workout")) %>%
mutate(playlist = factor(playlist)) %>%
mutate(
segments =
map2(segments, key, compmus_c_transpose)) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map(pitches, compmus_normalise, 'manhattan'))) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map2(pitches, lag(pitches), `-`))) %>%
mutate(
segments =
map(
segments,
mutate,
pitches = map2(pitches, lag(pitches), `-`))) %>%
mutate(
segments =
map(
segments,
mutate,
timbre = map2(timbre, lag(timbre), `-`))) %>%
mutate(
segments =
map(
segments,
mutate,
timbre = map2(timbre, lag(timbre), `-`))) %>%
mutate(
pitches =
map(segments,
compmus_summarise, pitches,
method = 'mean', na.rm = TRUE),
timbre =
map(
segments,
compmus_summarise, timbre,
method = 'mean', na.rm = TRUE)) %>%
mutate_at(vars(pitches, timbre), map, bind_rows) %>%
unnest(cols = c(pitches, timbre))
indie_deltadeltas$c01
indie_deltadeltas$c04
indie_deltas$c04
indie_deltas %>%
ggplot(aes(x = track.name, y = c01)) +
geom_point()
indie_deltadeltas %>%
ggplot(aes(x = track.name, y = c01)) +
geom_point()
View(indie)
View(indie_deltas)
indie_deltadeltas %>%
ggplot(aes(x = track.name, y = c01)) +
geom_point() +
facet_wrap(~playlist.name)
indie_deltadeltas %>%
ggplot(aes(x = track.name, y = c01)) +
geom_point() +
facet_wrap(~playlist_name)
indie_deltadeltas %>%
ggplot(aes(x = c01)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltadeltas %>%
ggplot(aes(y = c01)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltadeltas %>%
ggplot(aes(y = c01, x=track.name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltadeltas %>%
ggplot(aes(x=track.name, y=c01, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltadeltas %>%
ggplot(aes(x=c01, y=track.name, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltadeltas %>%
ggplot(aes(x=nrow(indie_deltadeltas), y=c01, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltas %>%
ggplot(aes(x=nrow(indie_deltadeltas), y=c01, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltas %>%
ggplot(aes(x=nrow(indie_deltadeltas), y='C', fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltas$C
indie_deltas %>%
ggplot(aes(x=nrow(indie_deltadeltas), y=C, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal()
indie_deltas %>%
ggplot(aes(x=nrow(indie_deltadeltas), y=C, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal() +
ylab("Delta C")
indie_deltadeltas %>%
ggplot(aes(x=nrow(indie_deltadeltas), y=C, fill=playlist_name)) +
geom_violin() +
facet_wrap(~playlist_name) +
scale_fill_viridis_d() +
theme_minimal() +
ylab("Delta C")
